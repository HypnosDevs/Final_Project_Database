<%- include('../partials/head') %>

    <body>
        <div class="container">
            <div class="leftbox">
                <nav>
                    <a onclick="tabs(0)" class="tab">
                        <i class="fa-solid fa-ticket"></i>
                    </a>

                </nav>
            </div>
            <div class="rightbox">
                <form id="form-update-promotion">
                    <div class="profile tabshow">
                        <h1>Edit Discount</h1>

                        <h2>Discount (%)</h2>
                        <input type="number" class="input" placeholder="Discount" name="discount" min="1" max="99">

                        <!-- <h2>Category</h2>
                        <input type="text" class="input" placeholder="Category" name="category"> -->
                        <h2>Min price (Thai baht)</h2>
                        <input type="text" class="input" placeholder="Min price" name="min_price">
                        <h2>Max discount (Thai baht)</h2>
                        <input type="text" class="input" placeholder="Max discount" name="max_discount">
                        <button type="button" class="btn" id="submitButton">Update</button>
                        <button type="button" class="btn" id="cancelButton"
                            onclick="window.location.href='/promotion_admin';">Cancel</button>

                    </div>
                </form>
            </div>

            <script>
                async function allowed(roles) {
                    let curUser = await axios.get("http://localhost:8080/api/Authentication/currentUser", {
                        withCredentials: true
                    });
                    if (!curUser.data) {
                        window.location.href = "/signIn";
                    }
                    else {
                        curUser = await axios.get(`http://localhost:8080/api/User/getUser/${curUser.data}`);
                        const role = curUser.data.user_role;
                        console.log('role:', role)
                        if (!roles.includes(role)) {
                            window.location.href = "/";
                        }
                    }
                }
                let roles = "<%= roles %>";
                roles = roles.split(',');
                allowed(roles);
            </script>

            <script>
                const submitButton = document.querySelector("#submitButton");
                const form = document.querySelector("#form-update-promotion");

                submitButton.addEventListener("click", async () => {
                    try {
                        const formData = new FormData(form);

                        for (item of formData) {
                            if (item[0] == 'category' && item[1] != '') {
                                const categories = item[1].split(' ');
                                for (let i = 0; i < categories.length; i++) {
                                    await fetch(`http://localhost:8080/api/Category/addCategory/${categories[i]}`, {
                                        method: "POST"
                                    });
                                }
                            }
                        };

                        const id = `<%= discount_id %>`;

                        // Get old discount category id
                        let discountCategoriesId = [];
                        const discountCategories = await axios.get(`http://localhost:8080/api/DiscountCategory/getDiscountCategoryByDiscountId/${id}`);
                        for (let i = 0; i < discountCategories.data.length; i++) {
                            discountCategoriesId.push(discountCategories.data[i]._id)
                        }



                        // Remove old discount category
                        await axios.delete(`http://localhost:8080/api/DiscountCategory/${id}/deleteDiscountCategoryByDiscountId`);

                        // Create new category
                        let categoriesId = [];
                        if (Array.from(formData)[1][1] != '') {
                            const categories = Array.from(formData)[1][1].split(' ');
                            for (let i = 0; i < categories.length; i++) {
                                const category = await axios.post(`http://localhost:8080/api/Category/addCategory/${categories[i]}`);
                                categoriesId.push(category.data._id);
                            }
                        }

                        // Create new discount category
                        for (const categoryId of categoriesId) {
                            const discountCategory = await axios.post('http://localhost:8080/api/DiscountCategory/addDiscountCategory', {
                                categoryId: categoryId,
                                discountId: id
                            })
                        }

                        await axios.post(`http://localhost:8080/api/Discount/<%= discount_id %>/updateDiscount`, {
                            discount: Array.from(formData)[0][1],
                            min_price: Array.from(formData)[2][1],
                            max_discount: Array.from(formData)[3][1],
                            discountCategory: discountCategoriesId
                        })

                        location.replace("http://localhost:9090/promotion_admin")

                    } catch (err) {
                        console.log(err.message);
                        res.status(500).send({ message: err.message });

                    }
                });
            </script>

            <script>
                const tabBtn = document.querySelectorAll('.tab');
                const tab = document.querySelectorAll('.tabshow');

                function tabs(panelIndex) {
                    tab.forEach(function (node) {
                        node.style.display = "none";
                    });
                    tab[panelIndex].style.display = "block";
                }
                tabs(0);
            </script>


    </body>

    </html>