<%- include('../partials/head') %>
<%- include('../partials/header') %>
<section id="page-header">
    <h2># Collection</h2>
    <p>Save more with coupons & up to 70% off! </p>
</section>
<section id="cart" class="">
    <table width="100%">
        <thead>
            <tr>
                <td>Remove</td>
                <td>Image</td>
                <td>Product</td>
                <td>Price</td>
                <td>Quantity</td>
                <td>Subtotal</td>
            </tr>
        </thead>
        <tbody></tbody> <!-- This will be populated dynamically -->
    </table>
</section>
<section id="cart-add" class="section-p1">
    <div id="coupon">
        <h3>Apply coupon</h3>
        <div>
            <input type="text" placeholder="Enter Your Coupon">
            <button class="normal"><strong>Apply</strong></button>
        </div>
    </div>
    <div id="subtotal">
        <h3>Cart Totals</h3>
        <table></table>
        <button class="normal"><strong>Proceed to check out</strong></button>
    </div>
</section>
<script>
    const deleteItem = async (shoppingcart_item_id) => {
        console.log('kuy')
        const shoppingCart = await axios.delete(`http://localhost:8080/api/ShoppingCartItem/deleteShoppingCartItem/${shoppingcart_item_id}`);
    }

    const renderCartTotals = (items) => {
        const table = document.querySelector('#cart-add #subtotal table');
        console.log(table);
        table.innerHTML = '';

        const cartSubtotal = items.reduce((total, item) => total + (item.product.price * item.qty), 0);


        const subtotalTr = document.createElement('tr');
        subtotalTr.innerHTML = `
            <td>Cart Subtotal</td>
            <td>฿${cartSubtotal}</td>
        `;
        table.appendChild(subtotalTr);

        const shippingTr = document.createElement('tr');
        shippingTr.innerHTML = `
            <td>Shipping</td>
            <td>Free</td>
        `;
        table.appendChild(shippingTr);
        
        const TotalTr = document.createElement('tr');
        TotalTr.innerHTML = `
            <td>Total</td>
            <td>฿${cartSubtotal}</td>
        `;
        table.appendChild(TotalTr);
    };

    const renderCartItems = (items) => {
        const tbody = document.querySelector('#cart tbody');
        tbody.innerHTML = ''; // Clear existing content

        items.forEach(item => {
            const row = document.createElement('tr');
            row.innerHTML = `
            <td><a href="#"><i class="fa-solid fa-circle-xmark" onclick="deleteItem('${item._id}')"></i></a></td>

                <td><img src="data:image/png;base64, ${item.product.image}"></td>
                <td>${item.product.name}</td>
                <td>฿${item.product.price}</td>
                <td>${item.qty}</td>
                <td>฿${item.product.price * item.qty}</td>
            `;
            tbody.appendChild(row);
        });
    };

    const getCart = async () => {
        try {
            const curUserId = await axios.get("http://localhost:8080/api/Authentication/currentUser", {
                withCredentials: true
            });
            const userId = curUserId.data;

            const shoppingCart = await axios.get(`http://localhost:8080/api/ShoppingCart/getAllShoppingcartFromuser/${userId}`);
            console.log("Shopping Cart:", shoppingCart.data);

            if (shoppingCart.data && shoppingCart.data.shoppingCartItems.length > 0) {
                
                const shoppingCartItems = await axios.get(`http://localhost:8080/api/ShoppingCartItem/getItemFromShoppingCart/${shoppingCart.data[0]._id}`);
                console.log("Shopping Cart Items:", shoppingCartItems.data);
                renderCartItems(shoppingCartItems.data); // Render cart items
                renderCartTotals(shoppingCartItems.data);
            } else {
                // Remove the #cart-add section
                const cartAddSection = document.getElementById('cart-add');
                cartAddSection.parentNode.removeChild(cartAddSection);

                // Remove the #cart section
                const cartSection = document.getElementById('cart');
                cartSection.parentNode.removeChild(cartSection);

                // Create an h1 element with the text "No products found" and class "no-product"
                const h1Element = document.createElement('h1');
                h1Element.textContent = "No products found";
                h1Element.classList.add('no-product');

                // Get the reference node after which the h1 will be inserted
                const pageHeaderSection = document.getElementById('page-header');
                const referenceNode = pageHeaderSection.nextElementSibling;

                // Insert the h1 element after the page-header section
                pageHeaderSection.parentNode.insertBefore(h1Element, referenceNode);
                
                console.log("No shopping cart found for user:", userId);
            }

        } catch (error) {
            console.error("Error fetching shopping cart:", error);
        }
    };

    getCart();
</script>
<%- include('../partials/footer') %>
